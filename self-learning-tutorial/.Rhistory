cglwd=0.3, # Width of line for radar
calcex=0.75, # Font size for axis labels
vlcex=1) # Font size for skills labels
# Set you goal skills point
skillsPointsGoal <- data.frame("Programming"=c(5, 1, 4),
"Statistics"=c(5, 1, 4),
"Databases"=c(5, 1, 3),
"Projects"=c(5, 1, 4),
"Web"=c(5, 1, 3),
"Versioning"=c(5, 1, 5))
rownames(skillsPointsGoal) <- c("Max level", "Min level", "My level")
# Plot my goal point
radarchart(skillsPointsGoal,
axistype=1, # Centre axis labels
title="Where I'd like to be",
pcol=rgb(0.2,0.5,0.5, 0.6), # Colour of polygon
pfcol=rgb(0.2,0.5,0.5, 0.5), # COlour of polygon fill
plwd=2, # Line width for the polygon
cglcol="grey", # COlour of lines in web
cglty=1, # Type of line in radar
axislabcol="blue", # Skills categories colour
caxislabels=c("Unaware","Aware","Working","Practitioner", "Expert"), # Skills categories
cglwd=0.3, # Width of line for radar
calcex=0.75, # Font size for axis labels
vlcex=1) # Font size for skills labels
install.packages("devtools")
devtools::install_github("JosephCrispell/basicPlotteR")
library(basicPlotteR)
library(basicPlotteR)
# Create a chart with my current skills points
radarChart(scores=skillsPointsCurrent["My level", ],
names=colnames(skillsPointsCurrent),
levels=c("Unaware","Aware","Working","Practitioner", "Expert"))
# Add my goal onto the same chart
radarChart(scores=skillsPointsGoal["My level", ],
names=colnames(skillsPointsGoal),
levels=c("Unaware","Aware","Working","Practitioner", "Expert"), add=TRUE,
polygon.col="blue")
# Add a legend
legend("topright", legend=c("Current", "Goal"), text.col=c("red", "blue"),  bty="n", xpd=TRUE)
install.packages("plotly")
library(plotly)
# Create a radial plot object
fig <- plot_ly(type="scatterpolar", fill="toself", mode="markers")
# Add the first skills point trace - current
fig <- add_trace(fig,
r=as.numeric(skillsPointsCurrent["My level", ]),
theta=colnames(skillsPointsCurrent),
name="Current")
# Add the second skills point trace - my goals
fig <- add_trace(fig,
r=as.numeric(skillsPointsGoal["My level", ]),
theta=colnames(skillsPointsGoal),
name="Goal")
# Add a radial axis
fig <- layout(fig,
polar=list(
radialaxis=list(visible=TRUE,
range=c(1,5),
tickvals=1:5,
ticktext=c("Unaware","Aware","Working","Practitioner", "Expert"))
)
)
# Plot the radial chart
fig
radarchart(df,
axistype=1, # Centre axis labels
title="Starting Point",
pcol=rgb(0.2,0.5,0.5, 0.6), # Colour of polygon points
pfcol=rgb(0.2,0.5,0.5, 0.5), # COlour of polygon fill
plwd=2, # Line width for the polygon
cglcol="grey", # COlour of lines in web
cglty=1, # Type of line in radar
axislabcol="blue", # Skills categories colour
caxislabels=c("Unaware","Aware","Working","Practitioner", "Expert"), # Skills categories
cglwd=0.3, # Width of line for radar
calcex=0.75, # Font size for axis labels
vlcex=1) # Font size for skills labels
?radarchart
install.packages("cowplot")
library(cowplot)
unique(df$unique_role_index)
print(index)
for (index in unique(df$unique_role_index)){
print(index)
}
radardf <- data.frame(c(0,0,0,4,4,4), nrow = 2)
?data.frame
radardf
unique(df$skill)
radardf <- data.frame('Business planning, finance and resourcing' = c(0,4),
'Delivery of outcomes' = c(0,4),
'Planning and scheduling' = c(0,4))
radardf
df[which('unique_role_index' = index)]
which(LETTERS == "R")
LETTERS
df[which(df$unique_role_index = index)]
df[which(df$unique_role_index == index)]
which(df$unique_role_index == index)
df[which(df$unique_role_index == index),]
df[which(df$unique_role_index == index),]$current_level_num
radardf <- rbind(radardf,df[which(df$unique_role_index == index),]$current_level_num)
radarchart(radardf,
axistype=1, # Centre axis labels
title="Starting Point",
pcol=rgb(0.2,0.5,0.5, 0.6), # Colour of polygon points
pfcol=rgb(0.2,0.5,0.5, 0.5), # COlour of polygon fill
plwd=2, # Line width for the polygon
cglcol="grey", # COlour of lines in web
cglty=1, # Type of line in radar
axislabcol="blue", # Skills categories colour
caxislabels=c("Unaware","Aware","Working","Practitioner", "Expert"), # Skills categories
cglwd=0.3, # Width of line for radar
calcex=0.75, # Font size for axis labels
vlcex=1) # Font size for skills labels
radardf <- data.frame('Business planning, finance and resourcing' = c(0,4),
'Delivery of outcomes' = c(0,4),
'Planning and scheduling' = c(0,4))
plotradar <- function(dataframe , title){
radarchart(radardf,
axistype=1, # Centre axis labels
title="Starting Point",
pcol=rgb(0.2,0.5,0.5, 0.6), # Colour of polygon points
pfcol=rgb(0.2,0.5,0.5, 0.5), # COlour of polygon fill
plwd=2, # Line width for the polygon
cglcol="grey", # COlour of lines in web
cglty=1, # Type of line in radar
axislabcol="blue", # Skills categories colour
caxislabels=c("Unaware","Aware","Working","Practitioner", "Expert"), # Skills categories
cglwd=0.3, # Width of line for radar
calcex=0.75, # Font size for axis labels
vlcex=1) # Font size for skills labels
}
plots <- c()
tempdf <- df[which(df$unique_role_index == index)
,]
paste0(tempdf$division, '. Grade: ', tempdf$grade)
paste0(tempdf$division[0], '. Grade: ', tempdf$grade[0])
paste0(tempdf$division[1], '. Grade: ', tempdf$grade[1])
plots <- c()
for (index in unique(df$unique_role_index)){
tempdf <- df[which(df$unique_role_index == index),]
tempradardf <- rbind(radardf,tempdf$current_level_num)
plots <- c(plots,plotradar(dataframe = tempradardf,
title = paste0(tempdf$division[1], '. Grade: ', tempdf$grade[1])))
}
plotradar <- function(dataframe , title){
rad <- radarchart(radardf,
axistype=1, # Centre axis labels
title="Starting Point",
pcol=rgb(0.2,0.5,0.5, 0.6), # Colour of polygon points
pfcol=rgb(0.2,0.5,0.5, 0.5), # COlour of polygon fill
plwd=2, # Line width for the polygon
cglcol="grey", # COlour of lines in web
cglty=1, # Type of line in radar
axislabcol="blue", # Skills categories colour
caxislabels=c("Unaware","Aware","Working","Practitioner", "Expert"), # Skills categories
cglwd=0.3, # Width of line for radar
calcex=0.75, # Font size for axis labels
vlcex=1) # Font size for skills labels
return(rad)
}
radarchart
radardf <- data.frame('Business planning, finance and resourcing' = c(0,4),
'Delivery of outcomes' = c(0,4),
'Planning and scheduling' = c(0,4))
plots <- c()
for (index in unique(df$unique_role_index)){
tempdf <- df[which(df$unique_role_index == index),]
tempradardf <- rbind(radardf,tempdf$current_level_num)
plots <- c(plots,plotradar(dataframe = tempradardf,
title = paste0(tempdf$division[1], '. Grade: ', tempdf$grade[1])))
}
tempdf <- df[which(df$unique_role_index == index),]
tempdf
tempradardf <- rbind(radardf,tempdf$current_level_num)
tempradardf
plotradar <- function(dataframe , title){
rad <- radarchart(tempradardf,
axistype=1, # Centre axis labels
title=title,
pcol=rgb(0.2,0.5,0.5, 0.6), # Colour of polygon points
pfcol=rgb(0.2,0.5,0.5, 0.5), # COlour of polygon fill
plwd=2, # Line width for the polygon
cglcol="grey", # COlour of lines in web
cglty=1, # Type of line in radar
axislabcol="blue", # Skills categories colour
caxislabels=c("Unaware","Aware","Working","Practitioner", "Expert"), # Skills categories
cglwd=0.3, # Width of line for radar
calcex=0.75, # Font size for axis labels
vlcex=1) # Font size for skills labels
return(rad)
}
for (index in unique(df$unique_role_index)){
tempdf <- df[which(df$unique_role_index == index),]
tempradardf <- rbind(radardf,tempdf$current_level_num)
plots <- c(plots,plotradar(dataframe = tempradardf,
title = paste0(tempdf$division[1], '. Grade: ', tempdf$grade[1])))
}
for (index in unique(df$unique_role_index)){
tempdf <- df[which(df$unique_role_index == index),]
tempradardf <- rbind(radardf,tempdf$current_level_num)
plots <- c(plots,plotradar(dataframe = tempradardf,
title = paste0(tempdf$division[1], ': ', tempdf$grade[1])))
}
radardf <- data.frame('Business planning, finance and resourcing' = c(0,4),
'Delivery of outcomes' = c(0,4),
'Planning and scheduling' = c(0,4))
for (index in unique(df$unique_role_index)){
tempdf <- df[which(df$unique_role_index == index),]
radardf <- rbind(radardf,tempdf$current_level_num)
#plots <- c(plots,plotradar(dataframe = tempradardf,
#                           title = paste0(tempdf$division[1], ': ', tempdf$grade[1])))
}
radarchart(radardf,
axistype=1, # Centre axis labels
title='title',
pcol=rgb(0.2,0.5,0.5, 0.6), # Colour of polygon points
pfcol=rgb(0.2,0.5,0.5, 0.5), # COlour of polygon fill
plwd=2, # Line width for the polygon
cglcol="grey", # COlour of lines in web
cglty=1, # Type of line in radar
axislabcol="blue", # Skills categories colour
caxislabels=c("Unaware","Aware","Working","Practitioner", "Expert"), # Skills categories
cglwd=0.3, # Width of line for radar
calcex=0.75, # Font size for axis labels
vlcex=1) # Font size for skills labels
df
radar$df
tempradar$df
radardf$df
radardf <- data.frame('Business planning, finance and resourcing' = c(0,4),
'Delivery of outcomes' = c(0,4),
'Planning and scheduling' = c(0,4))
for (index in unique(df$unique_role_index)){
tempdf <- df[which(df$unique_role_index == index),]
radardf <- rbind(radardf,tempdf$current_level_num)
#plots <- c(plots,plotradar(dataframe = tempradardf,
#                           title = paste0(tempdf$division[1], ': ', tempdf$grade[1])))
}
radardf
tempdf$current_level_num+1
radardf <- data.frame('Business planning, finance and resourcing' = c(1,5),
'Delivery of outcomes' = c(1,5),
'Planning and scheduling' = c(1,5))
for (index in unique(df$unique_role_index)){
tempdf <- df[which(df$unique_role_index == index),]
radardf <- rbind(radardf,tempdf$current_level_num+1)
plots <- c(plots,plotradar(dataframe = tempradardf,
title = paste0(tempdf$division[1], ': ', tempdf$grade[1])))
}
for (index in unique(df$unique_role_index)){
tempdf <- df[which(df$unique_role_index == index),]
tempradardf <- rbind(radardf,tempdf$current_level_num+1)
plots <- c(plots,plotradar(dataframe = tempradardf,
title = paste0(tempdf$division[1], ': ', tempdf$grade[1])))
}
radardf <- data.frame('Business planning, finance and resourcing' = c(1,5),
'Delivery of outcomes' = c(1,5),
'Planning and scheduling' = c(1,5))
for (index in unique(df$unique_role_index)){
tempdf <- df[which(df$unique_role_index == index),]
tempradardf <- rbind(radardf,tempdf$current_level_num+1)
plots <- c(plots,plotradar(dataframe = tempradardf,
title = paste0(tempdf$division[1], ': ', tempdf$grade[1])))
}
plotradar <- function(dataframe , title){
rad <- radarchart(dataframe,
axistype=1, # Centre axis labels
title=title,
pcol=rgb(0.2,0.5,0.5, 0.6), # Colour of polygon points
pfcol=rgb(0.2,0.5,0.5, 0.5), # COlour of polygon fill
plwd=2, # Line width for the polygon
cglcol="grey", # COlour of lines in web
cglty=1, # Type of line in radar
axislabcol="blue", # Skills categories colour
caxislabels=c("Unaware","Aware","Working","Practitioner", "Expert"), # Skills categories
cglwd=0.3, # Width of line for radar
calcex=0.75, # Font size for axis labels
vlcex=1) # Font size for skills labels
return(rad)
}
radardf <- data.frame('Business planning, finance and resourcing' = c(1,5),
'Delivery of outcomes' = c(1,5),
'Planning and scheduling' = c(1,5))
df
plots <- c()
for (index in unique(df$unique_role_index)){
tempdf <- df[which(df$unique_role_index == index),]
tempradardf <- rbind(radardf,tempdf$current_level_num+1)
plots <- c(plots,plotradar(dataframe = tempradardf,
title = paste0(tempdf$division[1], ': ', tempdf$grade[1])))
}
radardf <- data.frame('Business planning, finance and resourcing' = c(5,1),
'Delivery of outcomes' = c(5,1),
'Planning and scheduling' = c(5,1))
for (index in unique(df$unique_role_index)){
tempdf <- df[which(df$unique_role_index == index),]
tempradardf <- rbind(radardf,tempdf$current_level_num+1)
plots <- c(plots,plotradar(dataframe = tempradardf,
title = paste0(tempdf$division[1], ': ', tempdf$grade[1])))
}
op <- par(mar = c(1, 1, 1, 1))
par(mfrow = c(2,5))
for (index in unique(df$unique_role_index)){
tempdf <- df[which(df$unique_role_index == index),]
tempradardf <- rbind(radardf,tempdf$current_level_num+1)
plotradar(dataframe = tempradardf,
title = paste0(tempdf$division[1], ': ', tempdf$grade[1])))
}
par(mfrow = c(2,5))
for (index in unique(df$unique_role_index)){
tempdf <- df[which(df$unique_role_index == index),]
tempradardf <- rbind(radardf,tempdf$current_level_num+1)
plotradar(dataframe = tempradardf,
title = paste0(tempdf$division[1], ': ', tempdf$grade[1]))
}
#drop AO cos no comparison
df<-df[!(df$grade=="AO"),]
op <- par(mar = c(1, 1, 1, 1))
par(mfrow = c(2,4))
for (index in unique(df$unique_role_index)){
tempdf <- df[which(df$unique_role_index == index),]
tempradardf <- rbind(radardf,tempdf$current_level_num+1)
plotradar(dataframe = tempradardf,
title = paste0(tempdf$division[1], ': ', tempdf$grade[1]))
}
print('code goes here!')
# What happens if you run:
a_vry_long_name
numeric_vector <- c(1:5)
numeric_vector[c(1,length(numeric_vector))]
numeric_vector/3
y <- c(1:5)
numeric_vector*y
y <- c(5:1)
numeric_vector*y
seq()
seq(10,1)
ls()
rm(y)
ls()
rm(list = ls())
my_file <- file.path("data", "gapminder.csv")
gapminder <- read_csv(file = my_file)
library(tidyverse)
my_file <- file.path("data", "gapminder.csv")
gapminder <- read_csv(file = my_file)
setwd("C:/My_RStudio/Workspace/")
setwd("C:/Users/whitet/git/DSCA_Intro-R/self-learning-tutorial")
my_file <- file.path("data", "gapminder.csv")
gapminder <- read_csv(file = my_file)
view(gapminder)
view(gapminder)
gapminder$country <- as.factor(gapminder$country)
gapminder$continent <- as.factor(gapminder$continent)
str(gapminder)
summary(gapminder)
gapminder[1]
gapminder['pop']
pop <- gapminder['pop']
gapminder[5:6,]
gapminder['gdpPercap', 'pop']
gapminder[c('gdpPercap', 'pop')]
sub_lifeExp <- gapminder[c(5,20,44),'lifeExp']
gapminder %>% select(-c(lifeExp, country))
gapminder %>% select(country, continent, gdpPercap)
gapminder[-'year']
gapminder['year']
gapminder[-c('year')]
gapminder[-c('year'),]
gapminder %>%  select(-year)
names(gapminder)
names(gapminder) - "year"
names(gapminder)[-3]
gapminder[names(gapminder)[-3]]
gapminder %>% filter(continent == "Asia", lifeExp <35)
gapminder %>% filter(gdpPercap <= 1000)
gapminder %>% filter(country %in% c('Chile', 'Argentina', 'Uraguay', 'Peru'),year>1991 ))
gapminder %>% filter(country %in% c('Chile', 'Argentina', 'Uraguay', 'Peru'),year>1991)
gapminder %>% filter(continent != 'Europe')
unique(gapminder$country)
gapminder %>% filter(country %in% c('Chile', 'Argentina', 'Uruguay', 'Peru'),year>1991)
gapminder %>% group_by(country) %>%
summarise(min_pop = min(pop), max_pop = max(pop) )
gapminder %>% group_by(continent, year) %>%
summarise(min_pop = min(pop), max_pop = max(pop) )
gapminder %>% group_by(country) %>% mutate(min_pop = min(pop), max_pop = max(pop) )
gapminder %>% group_by(continent, year) %>% mutate(min_pop = min(pop), max_pop = max(pop) )
gapminder
gapminder %>%
mm
uk_gdpPercap_df <- gapminder %>%
filter(country == "United Kingdom") %>%
select(gdpPercap, year) %>%
rename(uk_gdpPercap = gdpPercap)
gapminder <- left_join(gapminder, uk_gdpPercap_df, by = "year")
gapminder <- gapminder %>%
mutate(gdpPercap_rel = gdpPercap/uk_gdpPercap)
gapminder %>% group_by(year) %>% filter(gdpPercap_rel >1) %>% summarise(count = n())
gapminder %>% filter(gdpPercap_rel > 1) %>% select(country) %>% unique()
gapminder %>%
filter(year == 2007, country %in% c("Sri Lanka", "Turkey")) %>%
select(country, infant_mortality)
gapminder %>%
filter(year == 2007, country %in% c("Poland", "Malaysia")) %>%
select(country, infant_mortality)
gapminder %>%
filter(year == 2007, country %in% c("Pakistan", "Vietnam")) %>%
select(country, infant_mortality)
gapminder %>%
filter(year == 2007, country %in% c("South Africa", "Yemen, Rep.")) %>%
select(country, lifeExp)
gapminder %>%
filter(year == 2007, country %in% c("Chile", "Hungary")) %>%
select(country, lifeExp)
gapminder %>%
filter(year == 2007, country %in% c("Switzerland", "Kuwait")) %>%
select(country, gdpPercap)
gapminder %>%
filter(year == 2007, country %in% c("Colombia", "Nepal")) %>%
select(country, gdpPercap)
middle_east <- c("Israel", "Jordan", "Oman",  "Yemen, Rep.")
gapminder_middle_east <- gapminder %>%
filter(country %in% middle_east)
gapminder %>%
filter(continent == "Americas", year %in% c(1952, 2007)) %>%
mutate(year = as.factor(year)) %>%
ggplot() +
geom_point(mapping = aes(y = country, x = lifeExp, colour = year)) +
labs(x = "Life Expectancy", y = "Country", colour = "Year")
gapminder %>%
filter(continent == "Americas", year %in% c(1952, 2007)) %>%
mutate(year = as.factor(year)) %>%
ggplot() +
geom_point(mapping = aes(y = country, x = lifeExp, colour = year)) +
labs(x = "Life Expectancy", y = "Country", colour = "Year") +
ggtitle("Life Expectancy inthe Americas 1952 vs 2007")
gap_lifeExpdiff_df <- gapminder %>%
group_by(country) %>%
summarise(life_exp_diff = max(lifeExp) - min(lifeExp)) %>%
top_n(n = 10)
p1 <- ggplot(gap_lifeExpdiff_df) +
geom_col(mapping = aes(x = country, y = life_exp_diff), fill = "blue") +
labs(y = "Difference in Maximum and Minimum Life Expectancy (years)", x = "") +
ggtitle("Difference in Maximum and Minimum Life Expectancy", sub = "Top 10 countries with the largest difference (1952-2007)") +
ylim(0, 40)
p1 + coord_flip()
ggplot(gap_lifeExpdiff_df) +
geom_col(mapping = aes(x = fct_reorder(country, life_exp_diff), y = life_exp_diff), fill = "blue") +
labs(y = "Difference in Maximum and Minimum Life Expectancy (years)", x = "") +
ggtitle("Difference in Maximum and Minimum Life Expectancy", sub = "Top 10 countries with the largest difference (1952-2007)") +
ylim(0, 40)
gapminder %>%
filter(country %in% c('Argentina', 'Chile', 'Peru', 'Uruguay')) %>%
select(year, pop, country) %>%
mutate(pop = pop/1000000) %>%
ggplot() +
geom_point(mapping = aes(x = year, y = pop, colour = country)) +
facet_wrap(country ~ .) +
ggtitle("Population in Argentina, Chile, Peru, and Uruguay") +
labs(x = "Year", y = "Population in Millions", colour = "Country")
?top_n
gap_lifeExpdiff_df <- gapminder %>%
group_by(country) %>%
summarise(life_exp_diff = max(lifeExp) - min(lifeExp)) %>%
top_n(n = -10)
ggplot(gap_lifeExpdiff_df) +
geom_col(mapping = aes(x = fct_reorder(country, life_exp_diff), y = life_exp_diff), fill = "blue") +
labs(y = "Difference in Maximum and Minimum Life Expectancy (years)", x = "") +
ggtitle("Difference in Maximum and Minimum Life Expectancy", sub = "Top 10 countries with the smallest difference (1952-2007)") +
ylim(0, 40) + coord_flip()
gapminder %>%
ggplot() +
geom_line(mapping = aes(x = year,
y = infant_mortality,
group = country,
colour = country)) +
labs(y = "Infant Mortality", x = "Year", colour = "Continent") +
facet_wrap(. ~ country)
gapminder %>%
ggplot() +
geom_line(mapping = aes(x = year,
y = infant_mortality,
group = country,
colour = continent)) +
labs(y = "Infant Mortality", x = "Year", colour = "Continent") +
facet_wrap(. ~ continent)
gapminder %>%
ggplot() +
geom_line(mapping = aes(x = year,
y = infant_mortality,
group = country,
colour = country)) +
labs(y = "Infant Mortality", x = "Year", colour = "Continent") +
facet_wrap(. ~ continent)
gapminder %>%
filter(continent == "Europe", infant_mortality > 60)
gapminder %>%
ggplot() +
geom_line(mapping = aes(x = year,
y = lifeExp,
group = country,
colour = continent)) +
ylim(0, 100) +
labs(y = "Life Expectancy", x = "Year", colour = "Continent") +
facet_wrap(continent ~ .)
gapminder %>% filter(lifeExp<25)
gapminder %>% filter(continent == 'Asia', lifeExp<30, year > 1976)
gapminder %>% filter(continent == 'Asia', lifeExp<30, year > 1975)
gapminder %>% filter(continent == 'Asia', lifeExp<40, year > 1975)
